// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  relationMode = "prisma"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  email         String   @unique
  mobile_number String?
  image_url     String? 
  first_name    String?
  last_name     String?
  street        String?
  barangay      String?
  city          String?
  province      String?
  role          Role     @default(CUSTOMER)
  orders        Order[]
}

enum Role {
  CUSTOMER
  ADMIN
}

model Drink {
  id         String    @id @default(uuid())
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  color      Color?
  size       DrinkSize @default(ML_460)
  price      Decimal
}

model Milk {
  id              String   @id @default(uuid())
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  name            String
  color           Color
  additionalPrice Decimal?
}

model Order {
  id               String        @id @default(uuid())
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  completedAt      DateTime?
  isCompleted      Boolean       @default(false)
  status           Status        @default(TO_CONFIRM)
  totalPrice       Decimal
  totalItems       Int
  customer_name    String?
  deliveryAddress  String
  customRequest    String?
  claim_method     ClaimMethod   @default(DELIVERY)
  payment_method   PaymentMethod @default(GCASH)
  loggedInCustomer User?         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId           String?
  items            OrderItem[]
}

model OrderItem {
  id       String  @id @default(uuid())
  order    Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId  String
  name     String
  price    Decimal
  quantity Int
  size     String
}

enum Status {
  TO_CONFIRM
  PREPARING
  TO_DELIVER
  DELIVERED
}

enum DrinkSize {
  ML_460
}

enum Color {
  DARK
  LIGHT
  BEIGE
  SWEET
  DARK_BROWN
  LIGHT_BROWN
  ORANGE
  GREEN
}

enum ClaimMethod {
  DELIVERY
  // PICK_UP
}

enum PaymentMethod {
  GCASH
  BANK_TRANSFER
  // COD
}
